# -*- coding: utf-8 -*-
"""WebBlinders project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YFmUQjy-3NRx0hMRmg6onigoJwe-1qk9
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df=pd.read_csv('/content/artists.csv')
df

df.head()

df.tail()

df.columns

len(df.columns)

len(df)

df.info()

df.describe()

print(df[['followers', 'popularity']].describe())

df.shape

df.isnull().sum()

plt.figure(figsize=(10, 4))
sns.heatmap(df.isnull(), cbar=False, cmap="viridis")
plt.title("Missing Values Heatmap")
plt.show()

df['followers'].fillna(0, inplace=True)

df.isnull().sum()

df.columns

df.id.nunique()

df.id.unique()

df.followers.nunique()

df.followers.unique()

df.genres.unique()

import pandas as pd
import ast
def safe_convert_to_list(val):
    try:
        return ast.literal_eval(val)
    except (ValueError, SyntaxError):
        return []
df['genres'] = df['genres'].astype(str).apply(safe_convert_to_list)

print(df['genres'])

unique_genres_tuples = df['genres'].apply(tuple).unique()
unique_genres_lists = [list(t) for t in unique_genres_tuples]
print(unique_genres_lists)

"""Visualization"""

#What is the distribution of followers among artists?
plt.figure(figsize=(10, 5))
sns.histplot(df['followers'], bins=100, kde=True)
plt.xlim(0, df['followers'].quantile(0.95))  # Limit x-axis to avoid outlier skew
plt.title("Distribution of Followers Among Artists")
plt.xlabel("Number of Followers")
plt.ylabel("Count of Artists")
plt.grid(True)
plt.tight_layout()
plt.show()

import pandas as pd
# Artists with zero followers
zero_followers = df[df['followers'] == 0]
# Artists with zero popularity
zero_popularity = df[df['popularity'] == 0]
# Artists with both zero followers and zero popularity
zero_both = df[(df['followers'] == 0) & (df['popularity'] == 0)]
# Print counts
print("Number of artists with zero followers:", len(zero_followers))
print("Number of artists with zero popularity:", len(zero_popularity))
print("Number of artists with both zero followers and zero popularity:", len(zero_both))

#Correlation Between Followers and Popularity
correlation = df[['followers', 'popularity']].corr()
print("Correlation Matrix:\n", correlation)

plt.figure(figsize=(6, 4))
sns.heatmap(correlation, annot=True, cmap="coolwarm")
plt.title("Correlation Between Followers and Popularity")
plt.show()

#Do artists with more followers tend to be more popular?
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x='followers', y='popularity', alpha=0.3)
plt.xscale('log')  # Log scale improves visibility
plt.title("Followers vs Popularity")
plt.xlabel("Followers (log scale)")
plt.ylabel("Popularity")
plt.grid(True)
plt.show()

#Are there outliers in the followers or popularity data?
plt.figure(figsize=(10, 5))
sns.boxplot(data=df[['followers', 'popularity']])
plt.title("Boxplot of Followers and Popularity")

#What are the top 10 most common genres?
from collections import Counter;
# Count all genres
genre_counter = Counter()
for genre_list in df['genres']:
    genre_counter.update(genre_list)

# Get top 10 most common genres
top_genres = pd.DataFrame(genre_counter.most_common(10), columns=['genre', 'count'])

# Display top genres
print("Top 10 Most Common Genres:\n", top_genres)

# Plot bar chart
plt.figure(figsize=(10, 6))
sns.barplot(data=top_genres, y='genre', x='count', palette='magma')
plt.title("Top 10 Most Common Genres")
plt.xlabel("Number of Artists")
plt.ylabel("Genre")
plt.tight_layout()
plt.show()

#Are there artists associated with multiple genres?
multiple_genres = df[df['genres'].apply(lambda x: len(x) > 1)]
print("Number of artists with multiple genres:", len(multiple_genres))

#Which Genre Has the Highest Average Followers?
# Which Genre Has the Highest Average Followers?

# Explode the 'genres' column to have one row per genre per artist
exploded = df.explode('genres')

# Now group by genre and calculate the mean followers
genre_followers = exploded.groupby('genres')['followers'].mean().sort_values(ascending=False).head(10)

print("Top 10 Genres by Average Followers:\n", genre_followers)

#Top 10 Artists by Popularity
top_artists = df.sort_values(by='popularity', ascending=False).head(10)
print("Top 10 Artists by Popularity:\n", top_artists[['name', 'popularity']])

#Top 10 Artists by Number of Followers
top_artists_followers = df.sort_values(by='followers', ascending=False).head(10)
print("Top 10 Artists by Number of Followers:\n", top_artists_followers[['name', 'followers']])

#Artists are often associated with multiple genres.
#The top 10 most common genres include pop, rap, hip hop, and dance pop.
#Pop and hip hop dominate the industry in terms of both artist count and popularity.
#There is a strong positive correlation (~0.88) between an artist’s followers and their popularity.
#However, having many followers does not always guarantee current popularity — some older or inactive artists retain large follower bases.
#The most followed and most popular artists include many overlapping names, but not all.
#Followers reflect long-term fan interest, while popularity is more dynamic, influenced by current trends and activity.
#A few artists are clear outliers with exceptionally high follower counts or popularity, which may skew aggregate statistics.